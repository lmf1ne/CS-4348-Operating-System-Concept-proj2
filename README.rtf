{\rtf1\ansi\ansicpg936\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\froman\fcharset0 Times-Italic;\f2\fswiss\fcharset0 Helvetica;
\f3\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh9080\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl480\slmult1\pardirnatural\partightenfactor0

\f0\fs28 \cf0 CS 4348.003 \
Project 2s\
Date: 4/8/2022\
NetID: zxc180008\
Notes: \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\i \cf0 Version: 1.61.2 (Universal)\
Commit: 6cba118ac49a1b88332f312a8f67186f7f3c1643\
Date: 2021-10-19T15:49:28.381Z\
Electron: 13.5.1\
Chrome: 91.0.4472.164\
Node.js: 14.16.0\
V8: 9.1.269.39-electron.0\
OS: Darwin arm64 20.6.0
\f0\i0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl480\slmult1\pardirnatural\partightenfactor0
\cf0 To compile the file, Run the BankSimulation.java file. I have provide an additional output.txt in the zip file for reference. The program perfectly runs and served 100 customers and closed the bank. Pseudocode are at the end of the README file. \
\
Project 2 I will write a simulation of a certain bank. The program has three tellers, and as the bank opens, three tellers are ready. The customer will visit the bank either do withdrawal or deposit. If there is a free teller, customer will go to that server. If no teller is available the Custer will wait in the line until to be called. Customer will tell the teller on which transaction will be made, then teller will go to safe. When doing withdraw transaction, the teller must gain permission from bank manager and only one teller can interact with bank manager at a time. Once transaction completed, the teller leaves the bank and calls in line next customer.\
\
Once 100 customers are served, all three tellers left bank and bank closes.\
Program including 5 java files:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\pardirnatural\partightenfactor0

\f1\i \cf0 BankSimulation.java (main)s\
Teller.java\
Customer.java\
Rand.java\
Manager.java
\f0\i0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl480\slmult1\pardirnatural\partightenfactor0
\cf0 Down Below are my design and pseudocode:\
\
\pard\pardeftab720\ri1054\qj\partightenfactor0

\f2\fs24 \cf0 Semaphore t=3, m=1, s=2, cust_ready=0, teller_ready=0, manager_ready=0, mutax=1\
Semaphore[] producers = new Semaphore[3]=0;\
Int [] tellers = new int [3] and initialize to -1 for each\
Queue q;\
\

\f3\b Customer
\f2\b0 :\
//going to the bank\
//getting in line\
//selecting a teller\
Wait(t)\
For each teller:\
\pard\pardeftab720\li210\ri1054\qj\partightenfactor0
\cf0 If(teller == -1)\
	Use this teller\
\pard\pardeftab720\ri1054\qj\partightenfactor0
\cf0 \
//Customer goes to Teller #.\
//Customer # introduces itself to Teller #.\
Wait(mutax)\
Enqueue(\{task, cust#\})\
Signal(mutax)\
Signal(cust_ready)\
Wait(producers[#])\
//
\fs21  
\fs24 Customer # thanks Teller # and leaves.\
\
\

\f3\b Teller:
\f2\b0 \
//Teller # is ready to serve.\
//Teller # is waiting for a customer.\
Wait(cust_ready)\
Wait(mutax)\
Next_cust = Dequeue(q)\
Signal(mutax)\
//Teller # is serving Customer #.\
//Customer # asks for sth.\
//Teller # is handling the sth.\
If the task is withdrawal transaction\
\{\
	//Teller # is going to the manager.\
\pard\pardeftab720\li420\ri1054\qj\partightenfactor0
\cf0 //Teller # is getting the manager's permission.\
Signal(teller_ready)\
Wait(manager_ready)\
//Teller # is got the manager's permission.\
//Teller # is going to the safe.\
Wait(s)\
//Teller # is in the safe.\
//sleep\
Signal(s)\
//Teller # is leaving the safe.\
\pard\pardeftab720\ri1054\qj\partightenfactor0
\cf0 \}\
Else\
\{\
\pard\pardeftab720\li420\ri1054\qj\partightenfactor0
\cf0 //Teller # is going to the safe.\
Wait(s)\
//Teller # is in the safe.\
//sleep\
Signal(s)\
//Teller # is leaving the safe.\
\pard\pardeftab720\ri1054\qj\partightenfactor0
\cf0 \}\
//Teller # finishes Customer #'s sth.\
Signal(producers[#])\
Signal(t)\
\
\

\f3\b Manager:
\f2\b0 \
Wait(teller_ready)\
Wait(m)\
//sleep\
Signal(m)\
Signal(manager_ready)\
}